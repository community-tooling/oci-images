# Adapted from https://dev.to/cloudx/multi-arch-docker-images-the-easy-way-with-github-actions-4k54
name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

permissions:
  packages: write

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          fetch-depth: 2

      - name: Get changed images
        if: ${{ github.event_name != 'workflow_dispatch' }}
        id: changed-files
        uses: tj-actions/changed-files@1aee3621b1c10305ee778298fcf32324684e5448 # v38.2.2
        with:
          path: images
          dir_names: true
          dir_names_max_depth: 1
          json: true

      - name: Get all images
        id: all-files
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo images=$(find images/ -mindepth 1 -maxdepth 1 -type d -printf '%f\n' | jq -R -s -c 'split("\n") | map(select(length > 0)) | tostring') >> $GITHUB_OUTPUT

      - name: Set matrix
        id: matrix
        run: |
          if [[ "${{ github.event_name }}" != "workflow_dispatch" ]]; then
            echo matrix=${{ steps.changed-files.outputs.all_modified_files }}
            echo matrix=${{ steps.changed-files.outputs.all_modified_files }} >> $GITHUB_OUTPUT
          else
            echo matrix=${{ steps.all-files.outputs.images }}
            echo matrix=${{ steps.all-files.outputs.images }} >> $GITHUB_OUTPUT
          fi

    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}

  build:
    runs-on: ubuntu-latest
    needs: generate-matrix
    if: ${{ needs.generate-matrix.outputs.matrix != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate datever tag
        id: calver
        run: |
          echo version="1.$(date +%-Y%m%d.%s)" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          flavor: |
            latest=false
          images: |
            ghcr.io/community-tooling/oci-images/${{ matrix.image }}
          tags: |
            type=raw,value=${{ steps.calver.outputs.version }}

      - name: Build and push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: images/${{ matrix.image }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # This is used so that we have one job that is successful once all the matrix builds are done
  build-skip:
    runs-on: ubuntu-latest
    needs: generate-matrix
    if: ${{ needs.generate-matrix.outputs.matrix == '[]' }}
    steps:
      - run: echo "No images changed, no build necessary"

  # This is used so that we have one job that is successful once all the matrix builds are done
  build-results:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [build, build-skip]
    steps:
      - run: exit 1
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
